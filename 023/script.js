//ООП, прототипно-ориентированныое наследование

// на примере машины:
// Машина может тормозить, разгоняться, дрифтовать - это методы объекта
//Нашим прототипом будет - легковой автомобиль
// Св-ва это двигатель, колеса, двери и т.д.

const soldier = {
    health: 400,
    armor: 100,
    sayHello: function () {
        console.log('ПРивет мир');

    }
};

// const john = {
//     health: 100
// };

//!Старый способ, использовать не нужно
//Мы установили прототипом Джона Солдата
//Благодаря тому, что soldier наш прототип Джон получил св-во armor
// john.__proto__ = soldier;
// console.log(john.sayHello());

//!Способ, который нужно использовать
//Первый аргумент = тот объект, которому назначаем прототип
//Второй аргумент = тот объект, прототип которого мы устанавливаем
// Object.setPrototypeOf(john, soldier);
// john.sayHello();


//Создание нового объекта 
//Создаем прототип Джон, который будет прототипно наследоваться от Солдата
const john = Object.create(soldier);
